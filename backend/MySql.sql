/*
SQLyog Trial v13.1.8 (64 bit)
MySQL - 5.7.19 : Database - afi
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`afi` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `afi`;

/*Table structure for table `bot` */

DROP TABLE IF EXISTS `bot`;

CREATE TABLE `bot` (
  `id` int(20) NOT NULL AUTO_INCREMENT,
  `user_id` int(20) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `description` varchar(255) DEFAULT NULL,
  `content` text,
  `rating` int(20) DEFAULT NULL,
  `createtime` datetime DEFAULT NULL,
  `modifytime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=114532 DEFAULT CHARSET=utf8;

/*Data for the table `bot` */

insert  into `bot`(`id`,`user_id`,`title`,`description`,`content`,`rating`,`createtime`,`modifytime`) values 
(1,1,'骰子算法','骰子的算法','package com.kob.botrunningsystem.service.utils;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * @Author: Xuuxxi\r\n * @Date: 2022/9/25\r\n */\r\npublic class Bot implements com.kob.botrunningsystem.service.utils.BotAi {\r\n\r\n    private Integer count(List<Integer> ownBoard, List<Integer> otherBoard, Integer figure, Integer pos) {\r\n        Integer[] aMap = ownBoard.toArray(new Integer[0]);\r\n        aMap[pos] = figure;\r\n        Integer[] bMap = otherBoard.toArray(new Integer[0]);\r\n        for (int i = pos / 3 * 3; i < pos / 3 * 3 + 3; i++) if (bMap[i].equals(figure)) bMap[i] = 0;\r\n\r\n        int a_score = 0;\r\n        int b_score = 0;\r\n\r\n        for (int i = 0; i < 3; i++) {\r\n            int a = aMap[i * 3];\r\n            int b = aMap[i * 3 + 1];\r\n            int c = aMap[i * 3 + 2];\r\n\r\n            if (a == b && b == c) a_score += a * 9;\r\n            else if (a == b) a_score += a * 4 + c;\r\n            else if (a == c) a_score += a * 4 + b;\r\n            else if (b == c) a_score += b * 4 + a;\r\n            else a_score += (a + b + c);\r\n        }\r\n\r\n        for (int i = 0; i < 3; i++) {\r\n            int a = bMap[i * 3];\r\n            int b = bMap[i * 3 + 1];\r\n            int c = bMap[i * 3 + 2];\r\n\r\n            if (a == b && b == c) b_score += a * 9;\r\n            else if (a == b) b_score += a * 4 + c;\r\n            else if (a == c) b_score += a * 4 + b;\r\n            else if (b == c) b_score += b * 4 + a;\r\n            else b_score += (a + b + c);\r\n        }\r\n\r\n        return a_score - b_score;\r\n    }\r\n\r\n    private Integer getAns(List<Integer> ownBoard, List<Integer> otherBoard, Integer figure, List<Integer> res) {\r\n        if (res.isEmpty()) return -1;\r\n        int max = -999;\r\n        int ans = 0;\r\n\r\n        for (int i = 0; i < res.size(); i++) {\r\n            int tmp = count(ownBoard, otherBoard, figure, res.get(i));\r\n\r\n            if (max < tmp) {\r\n                max = tmp;\r\n                ans = i;\r\n            }\r\n        }\r\n\r\n        return res.get(ans);\r\n    }\r\n\r\n    @Override\r\n    public Integer nextStep(List<Integer> ownBoard, List<Integer> otherBoard, Integer figure) {\r\n        int res = -1;\r\n        ArrayList<Integer> tmpRes = new ArrayList<>();\r\n        //遍历三层\r\n        //有无相同数字\r\n        for (int pos = 0; pos < 3; pos++) {\r\n            //单独遍历每一层、找有无相同数字\r\n            for (int j = pos * 3; j < pos * 3 + 3; j++) {\r\n                //找到相同数字、能否放入\r\n                if (ownBoard.get(j).equals(figure)) {\r\n                    for (int i = pos * 3; i < pos * 3 + 3; i++) {\r\n                        //这一层有无地方放\r\n                        if (ownBoard.get(i).equals(0)) {\r\n                            tmpRes.add(i);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        res = getAns(ownBoard, otherBoard, figure, tmpRes);\r\n        if (res != -1) return res;\r\n\r\n        int[] cnt = {0, 0, 0};\r\n        int[] num = {0, 0, 0};\r\n        int min = 999;\r\n        int noNullMin = 0;\r\n        //无相同\r\n        for (int pos = 0; pos < 3; pos++) {\r\n            for (int j = pos * 3; j < pos * 3 + 3; j++) {\r\n                num[pos] += ownBoard.get(j);\r\n                if (!ownBoard.get(j).equals(0)) cnt[pos]++;\r\n            }\r\n        }\r\n\r\n        for (int pos = 0; pos < 3; pos++) {\r\n            //有空层\r\n            if (cnt[pos] == 0) {\r\n                tmpRes.add(pos * 3);\r\n            }\r\n\r\n            if (min > num[pos] && cnt[pos] < 3) {\r\n                min = num[pos];\r\n                noNullMin = pos;\r\n            }\r\n        }\r\n\r\n        res = getAns(ownBoard, otherBoard, figure, tmpRes);\r\n        if (res != -1) return res;\r\n\r\n\r\n        for (int i = noNullMin * 3; i < noNullMin * 3 + 3; i++) {\r\n            if (ownBoard.get(i).equals(0)) tmpRes.add(i);\r\n        }\r\n\r\n        res = getAns(ownBoard, otherBoard, figure, tmpRes);\r\n        return res;\r\n    }\r\n}',1500,'2022-09-29 20:17:18','2024-04-18 00:23:02'),
(2,1,'蛇蛇算法','蛇蛇的算法','package com.kob.botrunningsystem.service.utils;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * @Author: Xuuxxi\n * @Date: 2024/4/17\n */\npublic class BotSnake implements com.kob.botrunningsystem.service.utils.BotSnakeAi{\n    static class Cell {\n        public int x, y;\n\n        public Cell(int x, int y) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n\n    private boolean check_tail_increasing(int step) { //检测当前回合蛇的长度是否增加\n        if (step <= 10) return true;\n        else {\n            return step % 3 == 1;\n        }\n    }\n\n    public List<Cell> getCells(int sx, int sy, String steps) {\n        steps = steps.substring(1, steps.length() - 1);\n        List<Cell> res = new ArrayList<>(); //存放蛇的身体\n        int[][] fx = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\n        int x = sx, y = sy;\n        res.add(new Cell(x, y));\n        int step = 0; //回合数\n        for (int i = 0; i < steps.length(); i++) {\n            int ch = steps.charAt(i);\n            int d = steps.charAt(i) - \'0\';\n            x += fx[d][0];\n            y += fx[d][1];\n            res.add(new Cell(x, y));\n            if (!check_tail_increasing(++step)) {\n                res.remove(0);\n            }\n        }\n        return res;\n    }\n    \n    @Override\n    public Integer nextMove(String input) {\n        String[] strs = input.split(\"#\");\n        int[][] g = new int[13][14];\n        for (int i = 0, k = 0; i < 13 && k < strs[0].length(); i++) {\n            for (int j = 0; j < 14; j++, k++) {\n                if (strs[0].charAt(k) == \'1\') {\n                    g[i][j] = 1;\n                }\n            }\n        }\n\n        int aSx = Integer.parseInt(strs[1]), aSy = Integer.parseInt(strs[2]);\n        int bSx = Integer.parseInt(strs[4]);\n        int bSy = Integer.parseInt(strs[5]);\n        List<Cell> aCells = getCells(aSx, aSy, strs[3]);\n        List<Cell> bCells = getCells(bSx, bSy, strs[6]);\n\n        for (Cell c : aCells) g[c.x][c.y] = 1;\n        for (Cell c : bCells) g[c.x][c.y] = 1;\n\n        int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};\n        for (int i = 0; i < 4; i++) {\n            int x = aCells.get(aCells.size() - 1).x + dx[i]; // a的最后一个元素：蛇头\n            int y = aCells.get(aCells.size() - 1).y + dy[i];\n            if (x < 0 || x >= 13 || y < 0 || y >= 14 || g[x][y] == 1) continue;\n            return i;\n        }\n\n        return 0;\n    }\n}\n',1500,'2024-04-17 23:23:42','2024-04-18 00:23:15'),
(3,114517,'蛇蛇bot','1','package com.kob.botrunningsystem.service.utils;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * @Author: Xuuxxi\n * @Date: 2024/4/17\n */\npublic class BotSnake implements com.kob.botrunningsystem.service.utils.BotSnakeAi{\n    static class Cell {\n        public int x, y;\n\n        public Cell(int x, int y) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n\n    private boolean check_tail_increasing(int step) { //检测当前回合蛇的长度是否增加\n        if (step <= 10) return true;\n        else {\n            return step % 3 == 1;\n        }\n    }\n\n    public List<Cell> getCells(int sx, int sy, String steps) {\n        steps = steps.substring(1, steps.length() - 1);\n        List<Cell> res = new ArrayList<>(); //存放蛇的身体\n        int[][] fx = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\n        int x = sx, y = sy;\n        res.add(new Cell(x, y));\n        int step = 0; //回合数\n        for (int i = 0; i < steps.length(); i++) {\n            int ch = steps.charAt(i);\n            int d = steps.charAt(i) - \'0\';\n            x += fx[d][0];\n            y += fx[d][1];\n            res.add(new Cell(x, y));\n            if (!check_tail_increasing(++step)) {\n                res.remove(0);\n            }\n        }\n        return res;\n    }\n    \n    @Override\n    public Integer nextMove(String input) {\n        String[] strs = input.split(\"#\");\n        int[][] g = new int[13][14];\n        for (int i = 0, k = 0; i < 13 && k < strs[0].length(); i++) {\n            for (int j = 0; j < 14; j++, k++) {\n                if (strs[0].charAt(k) == \'1\') {\n                    g[i][j] = 1;\n                }\n            }\n        }\n\n        int aSx = Integer.parseInt(strs[1]), aSy = Integer.parseInt(strs[2]);\n        int bSx = Integer.parseInt(strs[4]);\n        int bSy = Integer.parseInt(strs[5]);\n        List<Cell> aCells = getCells(aSx, aSy, strs[3]);\n        List<Cell> bCells = getCells(bSx, bSy, strs[6]);\n\n        for (Cell c : aCells) g[c.x][c.y] = 1;\n        for (Cell c : bCells) g[c.x][c.y] = 1;\n\n        int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};\n        for (int i = 0; i < 4; i++) {\n            int x = aCells.get(aCells.size() - 1).x + dx[i]; // a的最后一个元素：蛇头\n            int y = aCells.get(aCells.size() - 1).y + dy[i];\n            if (x < 0 || x >= 13 || y < 0 || y >= 14 || g[x][y] == 1) continue;\n            return i;\n        }\n\n        return 0;\n    }\n}\n',1500,'2024-04-17 23:28:35','2024-04-17 23:52:10'),
(114514,114514,'Adam\'s CrazyBot!','Im Crazy!','package com.kob.botrunningsystem.service.utils;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * @Author: Xuuxxi\r\n * @Date: 2022/9/25\r\n */\r\npublic class Bot implements com.kob.botrunningsystem.service.utils.BotAi {\r\n\r\n    private Integer count(List<Integer> ownBoard, List<Integer> otherBoard, Integer figure, Integer pos) {\r\n        Integer[] aMap = ownBoard.toArray(new Integer[0]);\r\n        aMap[pos] = figure;\r\n        Integer[] bMap = otherBoard.toArray(new Integer[0]);\r\n        for (int i = pos / 3 * 3; i < pos / 3 * 3 + 3; i++) if (bMap[i].equals(figure)) bMap[i] = 0;\r\n\r\n        int a_score = 0;\r\n        int b_score = 0;\r\n\r\n        for (int i = 0; i < 3; i++) {\r\n            int a = aMap[i * 3];\r\n            int b = aMap[i * 3 + 1];\r\n            int c = aMap[i * 3 + 2];\r\n\r\n            if (a == b && b == c) a_score += a * 9;\r\n            else if (a == b) a_score += a * 4 + c;\r\n            else if (a == c) a_score += a * 4 + b;\r\n            else if (b == c) a_score += b * 4 + a;\r\n            else a_score += (a + b + c);\r\n        }\r\n\r\n        for (int i = 0; i < 3; i++) {\r\n            int a = bMap[i * 3];\r\n            int b = bMap[i * 3 + 1];\r\n            int c = bMap[i * 3 + 2];\r\n\r\n            if (a == b && b == c) b_score += a * 9;\r\n            else if (a == b) b_score += a * 4 + c;\r\n            else if (a == c) b_score += a * 4 + b;\r\n            else if (b == c) b_score += b * 4 + a;\r\n            else b_score += (a + b + c);\r\n        }\r\n\r\n        return a_score - b_score;\r\n    }\r\n\r\n    private Integer getAns(List<Integer> ownBoard, List<Integer> otherBoard, Integer figure, List<Integer> res) {\r\n        if (res.isEmpty()) return -1;\r\n        int max = -999;\r\n        int ans = 0;\r\n\r\n        for (int i = 0; i < res.size(); i++) {\r\n            int tmp = count(ownBoard, otherBoard, figure, res.get(i));\r\n\r\n            if (max < tmp) {\r\n                max = tmp;\r\n                ans = i;\r\n            }\r\n        }\r\n\r\n        return res.get(ans);\r\n    }\r\n\r\n    @Override\r\n    public Integer nextStep(List<Integer> ownBoard, List<Integer> otherBoard, Integer figure) {\r\n        int res = -1;\r\n        ArrayList<Integer> tmpRes = new ArrayList<>();\r\n        //遍历三层\r\n        //有无相同数字\r\n        for (int pos = 0; pos < 3; pos++) {\r\n            //单独遍历每一层、找有无相同数字\r\n            for (int j = pos * 3; j < pos * 3 + 3; j++) {\r\n                //找到相同数字、能否放入\r\n                if (ownBoard.get(j).equals(figure)) {\r\n                    for (int i = pos * 3; i < pos * 3 + 3; i++) {\r\n                        //这一层有无地方放\r\n                        if (ownBoard.get(i).equals(0)) {\r\n                            tmpRes.add(i);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        res = getAns(ownBoard, otherBoard, figure, tmpRes);\r\n        if (res != -1) return res;\r\n\r\n        int[] cnt = {0, 0, 0};\r\n        int[] num = {0, 0, 0};\r\n        int min = 999;\r\n        int noNullMin = 0;\r\n        //无相同\r\n        for (int pos = 0; pos < 3; pos++) {\r\n            for (int j = pos * 3; j < pos * 3 + 3; j++) {\r\n                num[pos] += ownBoard.get(j);\r\n                if (!ownBoard.get(j).equals(0)) cnt[pos]++;\r\n            }\r\n        }\r\n\r\n        for (int pos = 0; pos < 3; pos++) {\r\n            //有空层\r\n            if (cnt[pos] == 0) {\r\n                tmpRes.add(pos * 3);\r\n            }\r\n\r\n            if (min > num[pos] && cnt[pos] < 3) {\r\n                min = num[pos];\r\n                noNullMin = pos;\r\n            }\r\n        }\r\n\r\n        res = getAns(ownBoard, otherBoard, figure, tmpRes);\r\n        if (res != -1) return res;\r\n\r\n\r\n        for (int i = noNullMin * 3; i < noNullMin * 3 + 3; i++) {\r\n            if (ownBoard.get(i).equals(0)) tmpRes.add(i);\r\n        }\r\n\r\n        res = getAns(ownBoard, otherBoard, figure, tmpRes);\r\n        return res;\r\n    }\r\n}',1500,'2022-10-05 23:26:45','2022-10-05 23:26:45'),
(114515,114515,'CrazySnake','Im crazy 2','package com.kob.botrunningsystem.service.utils;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * @Author: Xuuxxi\n * @Date: 2024/4/17\n */\npublic class BotSnake implements com.kob.botrunningsystem.service.utils.BotSnakeAi{\n    static class Cell {\n        public int x, y;\n\n        public Cell(int x, int y) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n\n    private boolean check_tail_increasing(int step) { //检测当前回合蛇的长度是否增加\n        if (step <= 10) return true;\n        else {\n            return step % 3 == 1;\n        }\n    }\n\n    public List<Cell> getCells(int sx, int sy, String steps) {\n        steps = steps.substring(1, steps.length() - 1);\n        List<Cell> res = new ArrayList<>(); //存放蛇的身体\n        int[][] fx = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\n        int x = sx, y = sy;\n        res.add(new Cell(x, y));\n        int step = 0; //回合数\n        for (int i = 0; i < steps.length(); i++) {\n            int ch = steps.charAt(i);\n            int d = steps.charAt(i) - \'0\';\n            x += fx[d][0];\n            y += fx[d][1];\n            res.add(new Cell(x, y));\n            if (!check_tail_increasing(++step)) {\n                res.remove(0);\n            }\n        }\n        return res;\n    }\n    \n    @Override\n    public Integer nextMove(String input) {\n        String[] strs = input.split(\"#\");\n        int[][] g = new int[13][14];\n        for (int i = 0, k = 0; i < 13 && k < strs[0].length(); i++) {\n            for (int j = 0; j < 14; j++, k++) {\n                if (strs[0].charAt(k) == \'1\') {\n                    g[i][j] = 1;\n                }\n            }\n        }\n\n        int aSx = Integer.parseInt(strs[1]), aSy = Integer.parseInt(strs[2]);\n        int bSx = Integer.parseInt(strs[4]);\n        int bSy = Integer.parseInt(strs[5]);\n        List<Cell> aCells = getCells(aSx, aSy, strs[3]);\n        List<Cell> bCells = getCells(bSx, bSy, strs[6]);\n\n        for (Cell c : aCells) g[c.x][c.y] = 1;\n        for (Cell c : bCells) g[c.x][c.y] = 1;\n\n        int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};\n        for (int i = 0; i < 4; i++) {\n            int x = aCells.get(aCells.size() - 1).x + dx[i]; // a的最后一个元素：蛇头\n            int y = aCells.get(aCells.size() - 1).y + dy[i];\n            if (x < 0 || x >= 13 || y < 0 || y >= 14 || g[x][y] == 1) continue;\n            return i;\n        }\n\n        return 0;\n    }\n}\n',1500,NULL,NULL);

/*Table structure for table `problem` */

DROP TABLE IF EXISTS `problem`;

CREATE TABLE `problem` (
  `id` int(20) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `level` varchar(255) DEFAULT NULL,
  `description` text,
  `templateCode` text,
  `testCode` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `problem` */

/*Table structure for table `user` */

DROP TABLE IF EXISTS `user`;

CREATE TABLE `user` (
  `id` int(20) NOT NULL AUTO_INCREMENT,
  `username` varchar(255) DEFAULT NULL,
  `password` varchar(255) DEFAULT NULL,
  `photo` varchar(1000) DEFAULT NULL,
  `rating` int(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=114518 DEFAULT CHARSET=utf8;

/*Data for the table `user` */

insert  into `user`(`id`,`username`,`password`,`photo`,`rating`) values 
(1,'xuuxxi','$2a$10$7yq2zp2GBTIsE5Oj55D9V.gRYHxTHJCSQa6Q0gwLBRjPXwPaq01Ce','https://pic1.imgdb.cn/item/624bb2b7239250f7c5decf6e.jpg',1530),
(2,'xuuxxi\'s分身','$2a$10$cZI54QO7NqjvqKwpLB0n2O/yAxet/4XzTmU56MSQAVGKMo/HmM0GG','https://himg.bdimg.com/sys/portrait/item/pp.1.481df099.i32p0nCHRR3Oqo2KlSmvmQ?_t=1663067565416',1425),
(3,'Rebecca','1','https://pic1.imgdb.cn/item/6334439516f2c2beb159a7d1.jpg',1600),
(4,'Lucy','1','https://pic1.imgdb.cn/item/6334439516f2c2beb159a7d4.jpg',1650),
(5,'葬爱女王','1','https://img2.baidu.com/it/u=2280976231,3979009505&fm=253&fmt=auto&app=138&f=JPEG?w=200&h=200',1300),
(6,'时尚帅哥','1','https://img2.baidu.com/it/u=457644547,3654874748&fm=253&fmt=auto&app=138&f=JPEG?w=320&h=320',1310),
(7,'痴情男孩','1','https://img2.baidu.com/it/u=2229530847,3739411184&fm=253&fmt=auto&app=138&f=JPEG?w=200&h=200',1400),
(8,'酷帅女人','1','https://img0.baidu.com/it/u=367078044,422746365&fm=253&fmt=auto&app=138&f=JPEG?w=360&h=360',1410),
(9,'伤感女人','1','https://img0.baidu.com/it/u=3243713131,3249141329&fm=253&fmt=auto?w=200&h=200',1590),
(10,'思乡女人','1','https://img1.baidu.com/it/u=2596589971,4077750839&fm=253&fmt=auto&app=138&f=JPEG?w=200&h=200',1610),
(11,'街头霸王','1','https://img1.baidu.com/it/u=2021420268,1441394590&fm=253&fmt=auto&app=138&f=JPEG?w=320&h=320',1100),
(114514,'AdamBigHammer','$2a$10$lmesi.kJ0CiYv5QctOGDIeawyLVaekTzXkm9WTkY1YDyoPAa9Fh/y','https://pic1.imgdb.cn/item/6334434516f2c2beb1594757.png',54250),
(114515,'Snakee!','https://img1.baidu.com/it/u=1007838651,1444802646&fm=253&fmt=auto&app=138&f=JPEG?w=480&h=360','https://pic.imgdb.cn/item/662677a80ea9cb140325d0aa.jpg',54251),
(114516,'zkx','$2a$10$riKyt/Y4MJIKT1NvobWMku5PyaV5EyDcJn.fTmyUBU/aYJsUxjdDK','https://himg.bdimg.com/sys/portrait/item/pp.1.481df099.i32p0nCHRR3Oqo2KlSmvmQ?_t=1663067565416',1340),
(114517,'xixi','$2a$10$Qgz6p.F7o.spcr.40GopEOhtrmIoGrrfo4H.sUJYXcIVErugP1c2q','https://himg.bdimg.com/sys/portrait/item/pp.1.481df099.i32p0nCHRR3Oqo2KlSmvmQ?_t=1663067565416',1545);

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
